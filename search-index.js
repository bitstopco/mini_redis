crystal_doc_search_index_callback({"repository_name":"github.com/vladfaust/mini_redis","body":"# MiniRedis\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?style=flat-square)](https://crystal-lang.org/)\n[![Build status](https://img.shields.io/travis/com/vladfaust/mini_redis/master.svg?style=flat-square)](https://travis-ci.com/vladfaust/mini_redis)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg?style=flat-square)](https://github.vladfaust.com/mini_redis)\n[![Releases](https://img.shields.io/github/release/vladfaust/mini_redis.svg?style=flat-square)](https://github.com/vladfaust/mini_redis/releases)\n[![Awesome](https://awesome.re/badge-flat2.svg)](https://github.com/veelenga/awesome-crystal)\n[![vladfaust.com](https://img.shields.io/badge/style-.com-lightgrey.svg?longCache=true&style=flat-square&label=vladfaust&colorB=0a83d8)](https://vladfaust.com)\n[![Patrons count](https://img.shields.io/badge/dynamic/json.svg?label=patrons&url=https://www.patreon.com/api/user/11296360&query=$.included[0].attributes.patron_count&style=flat-square&colorB=red&maxAge=86400)](https://www.patreon.com/vladfaust)\n\nA light-weight Redis client for [Crystal](https://crystal-lang.org/).\n\n## Supporters\n\nThanks to all my patrons, I can build and support beautiful Open Source Software! 🙏\n\n[Lauri Jutila](https://github.com/ljuti)\n\n[![Become Patron](https://vladfaust.com/img/patreon-small.svg)](https://www.patreon.com/vladfaust)\n\n## About\n\nMiniRedis is a light-weight low-level alternative to existing Redis client implementations.\n\nIn comparison with [crystal-redis](https://github.com/stefanwille/crystal-redis), MiniRedis is slightly faster, has first-class support for raw bytes and doesn't need to be updated with every Redis release. On the other hand, MiniRedis doesn't have commands API (i.e. instead of `redis.ping` you should write `redis.command(\"PING\")`). However, such a low-level interface terminates the dependency on the third-party client maintainer (i.e. me), which makes it a perfect fit to use within a shard.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  mini_redis:\n    github: vladfaust/mini_redis\n    version: ~> 0.1.0\n```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"mini_redis\"\n\nredis = MiniRedis.new\n\n# Inline (i.e. one-line) commands are usually faster, because they don't need marshalling\npp redis.command(\"PING\").raw.as(String) # => \"PONG\"\n\n# MiniRedis responses wrap `Int64 | String | Bytes | Nil | Array(Value)` values, which are\n# properly mapped to `integer`, `simple string`, `bulk string`, `nil` and `array` Redis values\npp redis.command(\"SET foo bar\").raw.as(String) # => \"OK\"\nbytes = redis.command(\"GET foo\").raw.as(Bytes)\npp String.new(bytes) # => \"bar\"\n\n# It is possible to declare commands as enumerables (or pass as many arguments),\n# so they are going to be marshalled according to the Redis protocol.\n# It is particulary useful for commands with binary payloads\nredis.command({\"set\", \"foo\", \"bar\".to_slice})\nredis.command(\"set\", \"foo\", \"bar\".to_slice)\n\n# It is possible to split sending and receiving the response\nredis.send(\"SET foo bar\")\nredis.receive\n\n# Pipelining\nresponse = redis.pipeline do |pipe|\n  pipe.send(\"SET foo bar\")\nend\n\npp typeof(response) # => Array(MiniRedis::Value)\n\n# Transactions\nresponse = redis.transaction do |tx|\n  tx.send(\"SET foo bar\")\nend\n\npp typeof(response) # => MiniRedis::Value\n```\n\n## Development\n\n`env REDIS_URL=redis://localhost:6379 crystal spec` and you're good to go.\n\n## Contributing\n\n1. Fork it (<https://github.com/vladfaust/mini_redis/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'feat: new feature'`) using [angular-style commits](https://docs.onyxframework.org/contributing/commit-style)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Vlad Faust](https://github.com/vladfaust) - creator and maintainer\n","program":{"html_id":"github.com/vladfaust/mini_redis/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/vladfaust/mini_redis","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/vladfaust/mini_redis/MiniRedis","path":"MiniRedis.html","kind":"class","full_name":"MiniRedis","name":"MiniRedis","abstract":false,"superclass":{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/vladfaust/mini_redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mini_redis/errors.cr","line_number":1,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/errors.cr"},{"filename":"mini_redis/pipeline.cr","line_number":1,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr"},{"filename":"mini_redis/pool.cr","line_number":1,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr"},{"filename":"mini_redis/transaction.cr","line_number":1,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/transaction.cr"},{"filename":"mini_redis/value.cr","line_number":1,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/value.cr"},{"filename":"mini_redis.cr","line_number":6,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr"}],"repository_name":"github.com/vladfaust/mini_redis","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A light-weight low-level Redis client.","summary":"<p>A light-weight low-level Redis client.</p>","class_methods":[],"constructors":[{"id":"new(uri:URI=URI.parse(&quot;redis://localhost:6379&quot;),dns_timeout:Time::Span?=5.seconds,connect_timeout:Time::Span?=5.seconds,read_timeout:Time::Span?=5.seconds,write_timeout:Time::Span?=5.seconds)-class-method","html_id":"new(uri:URI=URI.parse(&amp;quot;redis://localhost:6379&amp;quot;),dns_timeout:Time::Span?=5.seconds,connect_timeout:Time::Span?=5.seconds,read_timeout:Time::Span?=5.seconds,write_timeout:Time::Span?=5.seconds)-class-method","name":"new","doc":"Initialize with Redis `URI`.\n\n```\nredis = MiniRedis.new(URI.parse(ENV[\"REDIS_URL\"]))\n```","summary":"<p>Initialize with Redis <code>URI</code>.</p>","abstract":false,"args":[{"name":"uri","doc":null,"default_value":"URI.parse(\"redis://localhost:6379\")","external_name":"uri","restriction":"URI"},{"name":"dns_timeout","doc":null,"default_value":"5.seconds","external_name":"dns_timeout","restriction":"Time::Span | ::Nil"},{"name":"connect_timeout","doc":null,"default_value":"5.seconds","external_name":"connect_timeout","restriction":"Time::Span | ::Nil"},{"name":"read_timeout","doc":null,"default_value":"5.seconds","external_name":"read_timeout","restriction":"Time::Span | ::Nil"},{"name":"write_timeout","doc":null,"default_value":"5.seconds","external_name":"write_timeout","restriction":"Time::Span | ::Nil"}],"args_string":"(uri : URI = <span class=\"t\">URI</span>.parse(<span class=\"s\">&quot;redis://localhost:6379&quot;</span>), dns_timeout : Time::Span? = <span class=\"n\">5</span>.seconds, connect_timeout : Time::Span? = <span class=\"n\">5</span>.seconds, read_timeout : Time::Span? = <span class=\"n\">5</span>.seconds, write_timeout : Time::Span? = <span class=\"n\">5</span>.seconds)","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L12","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L12","def":{"name":"new","args":[{"name":"uri","doc":null,"default_value":"URI.parse(\"redis://localhost:6379\")","external_name":"uri","restriction":"URI"},{"name":"dns_timeout","doc":null,"default_value":"5.seconds","external_name":"dns_timeout","restriction":"Time::Span | ::Nil"},{"name":"connect_timeout","doc":null,"default_value":"5.seconds","external_name":"connect_timeout","restriction":"Time::Span | ::Nil"},{"name":"read_timeout","doc":null,"default_value":"5.seconds","external_name":"read_timeout","restriction":"Time::Span | ::Nil"},{"name":"write_timeout","doc":null,"default_value":"5.seconds","external_name":"write_timeout","restriction":"Time::Span | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"socket = TCPSocket.new(host: uri.host.not_nil!, port: uri.port.not_nil!, dns_timeout: dns_timeout, connect_timeout: connect_timeout)\nsocket.sync = false\nsocket.read_timeout = read_timeout\nsocket.write_timeout = write_timeout\nnew(socket)\n"}},{"id":"new(socket:Socket)-class-method","html_id":"new(socket:Socket)-class-method","name":"new","doc":"Initialize with raw Crystal `Socket`.","summary":"<p>Initialize with raw Crystal <code>Socket</code>.</p>","abstract":false,"args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"Socket"}],"args_string":"(socket : Socket)","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L34","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L34","def":{"name":"new","args":[{"name":"socket","doc":null,"default_value":"","external_name":"socket","restriction":"Socket"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(socket)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":"Close the underlying socket.","summary":"<p>Close the underlying socket.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L42","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L42","def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@socket.close"}},{"id":"command(*args,**nargs):Value-instance-method","html_id":"command(*args,**nargs):Value-instance-method","name":"command","doc":"Wrap `#send` and `#receive` in one call.","summary":"<p>Wrap <code><a href=\"MiniRedis.html#send%28command%3AString%29%3ANil-instance-method\">#send</a></code> and <code><a href=\"MiniRedis.html#receive%28%2A%2Cskip_queued%3Dfalse%29%3AValue-instance-method\">#receive</a></code> in one call.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **nargs) : Value","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L72","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L72","def":{"name":"command","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"nargs","doc":null,"default_value":"","external_name":"nargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"Value","visibility":"Public","body":"send(*args, **nargs)\nreceive\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L37","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L37","def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"close"}},{"id":"pipeline(read:Bool,&block:Pipeline->):Array(Value)?-instance-method","html_id":"pipeline(read:Bool,&amp;block:Pipeline-&gt;):Array(Value)?-instance-method","name":"pipeline","doc":"Yield `Pipeline`, accumulate requests and then flush them all in one moment.\n*read* argument defines whether to read the response or not\n(improves performance, may be used in throw-away clients).\n\nSee [Pipelining docs](https://redis.io/topics/pipelining).","summary":"<p>Yield <code><a href=\"MiniRedis/Pipeline.html\">Pipeline</a></code>, accumulate requests and then flush them all in one moment.</p>","abstract":false,"args":[{"name":"read","doc":null,"default_value":"","external_name":"read","restriction":"Bool"}],"args_string":"(read : Bool, &block : Pipeline -> ) : Array(Value)?","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L142","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L142","def":{"name":"pipeline","args":[{"name":"read","doc":null,"default_value":"","external_name":"read","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Pipeline -> )"},"return_type":"Array(Value) | ::Nil","visibility":"Public","body":"pipe = Pipeline.new(self)\nyield pipe\n@socket.flush\nif read\n  pipe.queued.times.reduce(Array(Value).new(pipe.queued)) do |ary|\n    ary << receive\n  end\nend\n"}},{"id":"pipeline(&block:Pipeline->):Array(Value)-instance-method","html_id":"pipeline(&amp;block:Pipeline-&gt;):Array(Value)-instance-method","name":"pipeline","doc":"Call `#pipeline(true, &block)`, yielding `Pipeline`.\nUse this shortcut when you want to read the response.\n\n```\nredis.pipeline do |pipe|\n  pipe.send(\"PING\")\nend\n```","summary":"<p>Call <code>#pipeline(true, &block)</code>, yielding <code><a href=\"MiniRedis/Pipeline.html\">Pipeline</a></code>.</p>","abstract":false,"args":[],"args_string":"(&block : Pipeline -> ) : Array(Value)","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L133","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L133","def":{"name":"pipeline","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Pipeline -> )"},"return_type":"Array(Value)","visibility":"Public","body":"(pipeline(true, &block)).not_nil!"}},{"id":"receive(*,skip_queued=false):Value-instance-method","html_id":"receive(*,skip_queued=false):Value-instance-method","name":"receive","doc":"Read a response. Blocks until read. The response is cast to a Crystal type\naccording to the [Redis Protocol Specification](https://redis.io/topics/protocol).\nFor more information on types, see `Value`.\n\nIn case of error (`-` byte), a `Error` is raised.\n\nThere is an optional *skip_queue* argument, which is used in `Transaction` mode --\nit skips `QUEUED` strings, which improves the performance.","summary":"<p>Read a response.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"skip_queued","doc":null,"default_value":"false","external_name":"skip_queued","restriction":""}],"args_string":"(*, skip_queued = <span class=\"n\">false</span>) : Value","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L85","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L85","def":{"name":"receive","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"skip_queued","doc":null,"default_value":"false","external_name":"skip_queued","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Value","visibility":"Public","body":"type = @socket.read_char\ncase type\nwhen '-'\n  raise(Error.new(read_line))\nwhen ':'\n  return Value.new(read_line.to_i64)\nwhen '$'\n  length = read_line.to_i32\n  if length == -1\n    return Value.new(nil)\n  end\n  bytes = Bytes.new(length)\n  @socket.read_fully(bytes)\n  @socket.skip(2)\n  return Value.new(bytes)\nwhen '+'\n  if skip_queued\n    @socket.skip(\"QUEUED\\r\\n\".bytesize)\n    return Value.new(nil)\n  else\n    return Value.new(read_line)\n  end\nwhen '*'\n  size = read_line.to_i\n  if size == -1\n    return Value.new(nil)\n  else\n    return size.times.reduce(Value.new(Array(Value).new(size))) do |val, _|\n      (val.raw.as(Array)).push(receive)\n      val\n    end\n  end\nelse\n  raise(Error.new(\"Received invalid type string '#{type}'\"))\nend\n"}},{"id":"send(command:String):Nil-instance-method","html_id":"send(command:String):Nil-instance-method","name":"send","doc":"Send a `String` inline *command*.\nIt's generally faster than the `Enumerable` version, because it skips marshalling.\nHowever, inline commands could be a worse fit for operations with binary keys or values.\n\nSee [Redis Protocol: Inline Commands](https://redis.io/topics/protocol#inline-commands) for more information.","summary":"<p>Send a <code>String</code> inline <em>command</em>.</p>","abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"}],"args_string":"(command : String) : Nil","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L54","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L54","def":{"name":"send","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(@socket << command) << \"\\r\\n\"\n@socket.flush\n"}},{"id":"send(commands:Enumerable):Nil-instance-method","html_id":"send(commands:Enumerable):Nil-instance-method","name":"send","doc":"Send the *commands* marshalled according to the [Redis Protocol Specification](https://redis.io/topics/protocol).\nFor inline commands consider using `String` version.","summary":"<p>Send the <em>commands</em> marshalled according to the <a href=\"https://redis.io/topics/protocol\" target=\"_blank\">Redis Protocol Specification</a>.</p>","abstract":false,"args":[{"name":"commands","doc":null,"default_value":"","external_name":"commands","restriction":"Enumerable"}],"args_string":"(commands : Enumerable) : Nil","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L61","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L61","def":{"name":"send","args":[{"name":"commands","doc":null,"default_value":"","external_name":"commands","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"marshal(commands, @socket)\n@socket.flush\n"}},{"id":"send(*commands):Nil-instance-method","html_id":"send(*commands):Nil-instance-method","name":"send","doc":"Send the *commands* marshalled according to the [Redis Protocol Specification](https://redis.io/topics/protocol).\nFor inline commands consider using `String` version.","summary":"<p>Send the <em>commands</em> marshalled according to the <a href=\"https://redis.io/topics/protocol\" target=\"_blank\">Redis Protocol Specification</a>.</p>","abstract":false,"args":[{"name":"commands","doc":null,"default_value":"","external_name":"commands","restriction":""}],"args_string":"(*commands) : Nil","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L67","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L67","def":{"name":"send","args":[{"name":"commands","doc":null,"default_value":"","external_name":"commands","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"send(commands)"}},{"id":"socket:Socket-instance-method","html_id":"socket:Socket-instance-method","name":"socket","doc":"The underlying socket.","summary":"<p>The underlying socket.</p>","abstract":false,"args":[],"args_string":" : Socket","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L47","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L47","def":{"name":"socket","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@socket"}},{"id":"transaction(read:Bool,&block:Transaction->):Value?-instance-method","html_id":"transaction(read:Bool,&amp;block:Transaction-&gt;):Value?-instance-method","name":"transaction","doc":"Send `\"MULTI\"` command, `yield` `Transaction` and then send `\"EXEC\"` command.\n*read* argument defines whether to read the response or not\n(improves performance, may be used in throw-away clients).\n\nSee [Transactions docs](https://redis.io/topics/transactions).","summary":"<p>Send <code>\"MULTI\"</code> command, <code>yield</code> <code><a href=\"MiniRedis/Transaction.html\">Transaction</a></code> and then send <code>\"EXEC\"</code> command.</p>","abstract":false,"args":[{"name":"read","doc":null,"default_value":"","external_name":"read","restriction":"Bool"}],"args_string":"(read : Bool, &block : Transaction -> ) : Value?","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L171","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L171","def":{"name":"transaction","args":[{"name":"read","doc":null,"default_value":"","external_name":"read","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Transaction -> )"},"return_type":"Value | ::Nil","visibility":"Public","body":"command(\"MULTI\")\ntx = Transaction.new(self)\nyield tx\nif read\n  tx.queued.times do\n    receive(skip_queued: true)\n  end\nend\nexec_response = command(\"EXEC\")\nif read\n  return exec_response\nend\n"}},{"id":"transaction(&block:Transaction->):Value-instance-method","html_id":"transaction(&amp;block:Transaction-&gt;):Value-instance-method","name":"transaction","doc":"Call `#transaction(true, &block)`, yielding `Transaction`.\nUse this shortcut when you want to read the response.\n\n```\nredis.transaction do |tx|\n  tx.send(\"SET foo bar\")\nend\n```","summary":"<p>Call <code>#transaction(true, &block)</code>, yielding <code><a href=\"MiniRedis/Transaction.html\">Transaction</a></code>.</p>","abstract":false,"args":[],"args_string":"(&block : Transaction -> ) : Value","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L162","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis.cr#L162","def":{"name":"transaction","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Transaction -> )"},"return_type":"Value","visibility":"Public","body":"(transaction(true, &block)).not_nil!"}}],"macros":[],"types":[{"html_id":"github.com/vladfaust/mini_redis/MiniRedis/ConnectionError","path":"MiniRedis/ConnectionError.html","kind":"class","full_name":"MiniRedis::ConnectionError","name":"ConnectionError","abstract":false,"superclass":{"html_id":"github.com/vladfaust/mini_redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/vladfaust/mini_redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/vladfaust/mini_redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mini_redis/errors.cr","line_number":7,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/errors.cr"}],"repository_name":"github.com/vladfaust/mini_redis","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/mini_redis/MiniRedis","kind":"class","full_name":"MiniRedis","name":"MiniRedis"},"doc":"A error which is raised when something's wrong with Redis connection.","summary":"<p>A error which is raised when something's wrong with Redis connection.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/mini_redis/MiniRedis/Error","path":"MiniRedis/Error.html","kind":"class","full_name":"MiniRedis::Error","name":"Error","abstract":false,"superclass":{"html_id":"github.com/vladfaust/mini_redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/vladfaust/mini_redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/vladfaust/mini_redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mini_redis/errors.cr","line_number":3,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/errors.cr"}],"repository_name":"github.com/vladfaust/mini_redis","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/mini_redis/MiniRedis","kind":"class","full_name":"MiniRedis","name":"MiniRedis"},"doc":"A error which is raised in case when a error is read from Redis response.","summary":"<p>A error which is raised in case when a error is read from Redis response.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/mini_redis/MiniRedis/Pipeline","path":"MiniRedis/Pipeline.html","kind":"class","full_name":"MiniRedis::Pipeline","name":"Pipeline","abstract":false,"superclass":{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/vladfaust/mini_redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mini_redis/pipeline.cr","line_number":10,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr"}],"repository_name":"github.com/vladfaust/mini_redis","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/mini_redis/MiniRedis","kind":"class","full_name":"MiniRedis","name":"MiniRedis"},"doc":"A client in pipeline mode. See [Pipelining docs](https://redis.io/topics/pipelining).\n\n```\nresponse = redis.pipeline do |pipe|\n  pipe.send(\"PING\")\nend\npp response # => Array(MiniRedis::Value)\n```","summary":"<p>A client in pipeline mode.</p>","class_methods":[],"constructors":[{"id":"new(redis:MiniRedis)-class-method","html_id":"new(redis:MiniRedis)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"redis","doc":null,"default_value":"","external_name":"redis","restriction":"MiniRedis"}],"args_string":"(redis : MiniRedis)","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L14","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L14","def":{"name":"new","args":[{"name":"redis","doc":null,"default_value":"","external_name":"redis","restriction":"MiniRedis"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(redis)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"queued:Int32-instance-method","html_id":"queued:Int32-instance-method","name":"queued","doc":"The current number of commands queued for this pipeline.","summary":"<p>The current number of commands queued for this pipeline.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L12","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L12","def":{"name":"queued","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@queued"}},{"id":"send(command:String):Nil-instance-method","html_id":"send(command:String):Nil-instance-method","name":"send","doc":"See `MiniRedis#send`.","summary":"<p>See <code><a href=\"../MiniRedis.html#send%28command%3AString%29%3ANil-instance-method\">MiniRedis#send</a></code>.</p>","abstract":false,"args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"}],"args_string":"(command : String) : Nil","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L18","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L18","def":{"name":"send","args":[{"name":"command","doc":null,"default_value":"","external_name":"command","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(@redis.socket << command) << \"\\r\\n\"\n@queued = @queued + 1\n"}},{"id":"send(commands:Enumerable):Nil-instance-method","html_id":"send(commands:Enumerable):Nil-instance-method","name":"send","doc":"See `MiniRedis#send`.","summary":"<p>See <code><a href=\"../MiniRedis.html#send%28command%3AString%29%3ANil-instance-method\">MiniRedis#send</a></code>.</p>","abstract":false,"args":[{"name":"commands","doc":null,"default_value":"","external_name":"commands","restriction":"Enumerable"}],"args_string":"(commands : Enumerable) : Nil","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L24","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L24","def":{"name":"send","args":[{"name":"commands","doc":null,"default_value":"","external_name":"commands","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@redis.marshal(commands, @redis.socket)\n@queued = @queued + 1\n"}},{"id":"send(*commands):Nil-instance-method","html_id":"send(*commands):Nil-instance-method","name":"send","doc":"See `MiniRedis#send`.","summary":"<p>See <code><a href=\"../MiniRedis.html#send%28command%3AString%29%3ANil-instance-method\">MiniRedis#send</a></code>.</p>","abstract":false,"args":[{"name":"commands","doc":null,"default_value":"","external_name":"commands","restriction":""}],"args_string":"(*commands) : Nil","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L30","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pipeline.cr#L30","def":{"name":"send","args":[{"name":"commands","doc":null,"default_value":"","external_name":"commands","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"send(commands)"}}],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/mini_redis/MiniRedis/Pool","path":"MiniRedis/Pool.html","kind":"class","full_name":"MiniRedis::Pool","name":"Pool","abstract":false,"superclass":{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/vladfaust/mini_redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mini_redis/pool.cr","line_number":3,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr"}],"repository_name":"github.com/vladfaust/mini_redis","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/mini_redis/MiniRedis","kind":"class","full_name":"MiniRedis","name":"MiniRedis"},"doc":"A `MiniRedis` connection pool. It has dynamic `#capacity` and `#block` value.","summary":"<p>A <code><a href=\"../MiniRedis.html\">MiniRedis</a></code> connection pool.</p>","class_methods":[],"constructors":[{"id":"new(capacity:Int32=Int32::MAX,initial_size:Int32=0,uri:URI=URI.parse(&quot;redis://localhost:6379&quot;),dns_timeout:Time::Span?=5.seconds,connect_timeout:Time::Span?=5.seconds,read_timeout:Time::Span?=5.seconds,write_timeout:Time::Span?=5.seconds)-class-method","html_id":"new(capacity:Int32=Int32::MAX,initial_size:Int32=0,uri:URI=URI.parse(&amp;quot;redis://localhost:6379&amp;quot;),dns_timeout:Time::Span?=5.seconds,connect_timeout:Time::Span?=5.seconds,read_timeout:Time::Span?=5.seconds,write_timeout:Time::Span?=5.seconds)-class-method","name":"new","doc":"Initialize a pool with `#block` initializing a `MiniRedis` client from the *uri*.","summary":"<p>Initialize a pool with <code><a href=\"../MiniRedis/Pool.html#block%3AProc%28MiniRedis%29-instance-method\">#block</a></code> initializing a <code><a href=\"../MiniRedis.html\">MiniRedis</a></code> client from the <em>uri</em>.</p>","abstract":false,"args":[{"name":"capacity","doc":null,"default_value":"Int32::MAX","external_name":"capacity","restriction":"Int32"},{"name":"initial_size","doc":null,"default_value":"0","external_name":"initial_size","restriction":"Int32"},{"name":"uri","doc":null,"default_value":"URI.parse(\"redis://localhost:6379\")","external_name":"uri","restriction":"URI"},{"name":"dns_timeout","doc":null,"default_value":"5.seconds","external_name":"dns_timeout","restriction":"Time::Span | ::Nil"},{"name":"connect_timeout","doc":null,"default_value":"5.seconds","external_name":"connect_timeout","restriction":"Time::Span | ::Nil"},{"name":"read_timeout","doc":null,"default_value":"5.seconds","external_name":"read_timeout","restriction":"Time::Span | ::Nil"},{"name":"write_timeout","doc":null,"default_value":"5.seconds","external_name":"write_timeout","restriction":"Time::Span | ::Nil"}],"args_string":"(capacity : Int32 = <span class=\"t\">Int32</span><span class=\"t\">::</span><span class=\"t\">MAX</span>, initial_size : Int32 = <span class=\"n\">0</span>, uri : URI = <span class=\"t\">URI</span>.parse(<span class=\"s\">&quot;redis://localhost:6379&quot;</span>), dns_timeout : Time::Span? = <span class=\"n\">5</span>.seconds, connect_timeout : Time::Span? = <span class=\"n\">5</span>.seconds, read_timeout : Time::Span? = <span class=\"n\">5</span>.seconds, write_timeout : Time::Span? = <span class=\"n\">5</span>.seconds)","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L5","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L5","def":{"name":"new","args":[{"name":"capacity","doc":null,"default_value":"Int32::MAX","external_name":"capacity","restriction":"Int32"},{"name":"initial_size","doc":null,"default_value":"0","external_name":"initial_size","restriction":"Int32"},{"name":"uri","doc":null,"default_value":"URI.parse(\"redis://localhost:6379\")","external_name":"uri","restriction":"URI"},{"name":"dns_timeout","doc":null,"default_value":"5.seconds","external_name":"dns_timeout","restriction":"Time::Span | ::Nil"},{"name":"connect_timeout","doc":null,"default_value":"5.seconds","external_name":"connect_timeout","restriction":"Time::Span | ::Nil"},{"name":"read_timeout","doc":null,"default_value":"5.seconds","external_name":"read_timeout","restriction":"Time::Span | ::Nil"},{"name":"write_timeout","doc":null,"default_value":"5.seconds","external_name":"write_timeout","restriction":"Time::Span | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(capacity, initial_size) do\n  MiniRedis.new(uri: uri, dns_timeout: dns_timeout, connect_timeout: connect_timeout, read_timeout: read_timeout, write_timeout: write_timeout)\nend"}},{"id":"new(capacity:Int32=Int32::MAX,initial_size:Int32=0,&block:->MiniRedis)-class-method","html_id":"new(capacity:Int32=Int32::MAX,initial_size:Int32=0,&amp;block:-&gt;MiniRedis)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"capacity","doc":null,"default_value":"Int32::MAX","external_name":"capacity","restriction":"Int32"},{"name":"initial_size","doc":null,"default_value":"0","external_name":"initial_size","restriction":"Int32"}],"args_string":"(capacity : Int32 = <span class=\"t\">Int32</span><span class=\"t\">::</span><span class=\"t\">MAX</span>, initial_size : Int32 = <span class=\"n\">0</span>, &block :  -> MiniRedis)","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L50","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L50","def":{"name":"new","args":[{"name":"capacity","doc":null,"default_value":"Int32::MAX","external_name":"capacity","restriction":"Int32"},{"name":"initial_size","doc":null,"default_value":"0","external_name":"initial_size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> MiniRedis)"},"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(capacity, initial_size, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"block:Proc(MiniRedis)-instance-method","html_id":"block:Proc(MiniRedis)-instance-method","name":"block","doc":"The pool's block to call to initialize a new `MiniRedis`.\nCould be changed after the pool is initialized.","summary":"<p>The pool's block to call to initialize a new <code><a href=\"../MiniRedis.html\">MiniRedis</a></code>.</p>","abstract":false,"args":[],"args_string":" : Proc(MiniRedis)","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L30","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L30","def":{"name":"block","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Proc(MiniRedis)","visibility":"Public","body":"@block"}},{"id":"block=(block:Proc(MiniRedis))-instance-method","html_id":"block=(block:Proc(MiniRedis))-instance-method","name":"block=","doc":"The pool's block to call to initialize a new `MiniRedis`.\nCould be changed after the pool is initialized.","summary":"<p>The pool's block to call to initialize a new <code><a href=\"../MiniRedis.html\">MiniRedis</a></code>.</p>","abstract":false,"args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Proc(MiniRedis)"}],"args_string":"(block : Proc(MiniRedis))","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L30","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L30","def":{"name":"block=","args":[{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Proc(MiniRedis)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@block = block"}},{"id":"capacity:Int32-instance-method","html_id":"capacity:Int32-instance-method","name":"capacity","doc":"The pool's capacity. Could be changed after the pool is initialized.","summary":"<p>The pool's capacity.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L26","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L26","def":{"name":"capacity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@capacity"}},{"id":"capacity=(capacity:Int32)-instance-method","html_id":"capacity=(capacity:Int32)-instance-method","name":"capacity=","doc":"The pool's capacity. Could be changed after the pool is initialized.","summary":"<p>The pool's capacity.</p>","abstract":false,"args":[{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"Int32"}],"args_string":"(capacity : Int32)","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L26","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L26","def":{"name":"capacity=","args":[{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@capacity = capacity"}},{"id":"free-instance-method","html_id":"free-instance-method","name":"free","doc":"The number of free clients in this pool.","summary":"<p>The number of free clients in this pool.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L33","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L33","def":{"name":"free","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@free.size"}},{"id":"get(timeout:Time::Span?=nil,&block:MiniRedis->)-instance-method","html_id":"get(timeout:Time::Span?=nil,&amp;block:MiniRedis-&gt;)-instance-method","name":"get","doc":"Yield a free `MiniRedis` client.\nBlocks until one is available, raises `TimeoutError` on optional *timeout*.\nCalls `#release` after yield.","summary":"<p>Yield a free <code><a href=\"../MiniRedis.html\">MiniRedis</a></code> client.</p>","abstract":false,"args":[{"name":"timeout","doc":null,"default_value":"nil","external_name":"timeout","restriction":"Time::Span | ::Nil"}],"args_string":"(timeout : Time::Span? = <span class=\"n\">nil</span>, &block : MiniRedis -> )","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L59","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L59","def":{"name":"get","args":[{"name":"timeout","doc":null,"default_value":"nil","external_name":"timeout","restriction":"Time::Span | ::Nil"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(MiniRedis -> )"},"return_type":"","visibility":"Public","body":"redis = get(timeout)\nresult = yield redis\nrelease(redis)\nresult\n"}},{"id":"get(timeout:Time::Span?=nil):MiniRedis-instance-method","html_id":"get(timeout:Time::Span?=nil):MiniRedis-instance-method","name":"get","doc":"Return a free `MiniRedis` client.\nBlocks until one is available, raises `TimeoutError` on optional *timeout*.\n\nNOTE: Do not forget to `#release` the client afterwards!","summary":"<p>Return a free <code><a href=\"../MiniRedis.html\">MiniRedis</a></code> client.</p>","abstract":false,"args":[{"name":"timeout","doc":null,"default_value":"nil","external_name":"timeout","restriction":"Time::Span | ::Nil"}],"args_string":"(timeout : Time::Span? = <span class=\"n\">nil</span>) : MiniRedis","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L70","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L70","def":{"name":"get","args":[{"name":"timeout","doc":null,"default_value":"nil","external_name":"timeout","restriction":"Time::Span | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"MiniRedis","visibility":"Public","body":"if redis = @free.shift?\n  return redis\nelse\n  if @capacity.nil? || @used.size < @capacity.not_nil!\n    redis = @block.call\n    @used.add(redis)\n    return redis\n  else\n    if timeout! = timeout\n      started_at = Time.monotonic\n      loop do\n        Fiber.yield\n        if redis = @free.shift?\n          return redis\n        else\n          if (Time.monotonic - started_at) >= timeout!\n            raise(TimeoutError.new)\n          end\n        end\n      end\n    else\n      loop do\n        Fiber.yield\n        if redis = @free.shift?\n          return redis\n        end\n      end\n    end\n  end\nend"}},{"id":"release(redis:MiniRedis):Nil-instance-method","html_id":"release(redis:MiniRedis):Nil-instance-method","name":"release","doc":"Put the *redis* client back into the pool.","summary":"<p>Put the <em>redis</em> client back into the pool.</p>","abstract":false,"args":[{"name":"redis","doc":null,"default_value":"","external_name":"redis","restriction":"MiniRedis"}],"args_string":"(redis : MiniRedis) : Nil","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L105","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L105","def":{"name":"release","args":[{"name":"redis","doc":null,"default_value":"","external_name":"redis","restriction":"MiniRedis"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@used.delete(redis)\n@free.push(redis)\n"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":"The total size of this pool (`#free` plus `#used`).","summary":"<p>The total size of this pool (<code><a href=\"../MiniRedis/Pool.html#free-instance-method\">#free</a></code> plus <code><a href=\"../MiniRedis/Pool.html#used-instance-method\">#used</a></code>).</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L43","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L43","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"free + used"}},{"id":"used-instance-method","html_id":"used-instance-method","name":"used","doc":"The number of clients in this pool currently being used.","summary":"<p>The number of clients in this pool currently being used.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L38","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr#L38","def":{"name":"used","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@used.size"}}],"macros":[],"types":[{"html_id":"github.com/vladfaust/mini_redis/MiniRedis/Pool/TimeoutError","path":"MiniRedis/Pool/TimeoutError.html","kind":"class","full_name":"MiniRedis::Pool::TimeoutError","name":"TimeoutError","abstract":false,"superclass":{"html_id":"github.com/vladfaust/mini_redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/vladfaust/mini_redis/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/vladfaust/mini_redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mini_redis/pool.cr","line_number":111,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/pool.cr"}],"repository_name":"github.com/vladfaust/mini_redis","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/mini_redis/MiniRedis/Pool","kind":"class","full_name":"MiniRedis::Pool","name":"Pool"},"doc":"Could be raised when a *timeout* argument is provided upon `#get` call.","summary":"<p>Could be raised when a <em>timeout</em> argument is provided upon <code>#get</code> call.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/vladfaust/mini_redis/MiniRedis/Transaction","path":"MiniRedis/Transaction.html","kind":"class","full_name":"MiniRedis::Transaction","name":"Transaction","abstract":false,"superclass":{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/vladfaust/mini_redis/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/vladfaust/mini_redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mini_redis/transaction.cr","line_number":11,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/transaction.cr"}],"repository_name":"github.com/vladfaust/mini_redis","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/mini_redis/MiniRedis","kind":"class","full_name":"MiniRedis","name":"MiniRedis"},"doc":"A client in transaction mode. See [Transactions docs](https://redis.io/topics/transactions).\n\n```\nresponse = redis.transaction do |tx|\n  tx.send(\"SET foo bar\")\n  tx.get(\"GET foo\")\nend\npp response # => MiniRedis::Value(@raw=Array(MiniRedis::Value))\n```","summary":"<p>A client in transaction mode.</p>","class_methods":[],"constructors":[{"id":"new(redis:MiniRedis)-class-method","html_id":"new(redis:MiniRedis)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"redis","doc":null,"default_value":"","external_name":"redis","restriction":"MiniRedis"}],"args_string":"(redis : MiniRedis)","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/transaction.cr#L15","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/transaction.cr#L15","def":{"name":"new","args":[{"name":"redis","doc":null,"default_value":"","external_name":"redis","restriction":"MiniRedis"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(redis)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"queued:Int32-instance-method","html_id":"queued:Int32-instance-method","name":"queued","doc":"The current number of commands queued for this transaction.","summary":"<p>The current number of commands queued for this transaction.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/transaction.cr#L13","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/transaction.cr#L13","def":{"name":"queued","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@queued"}},{"id":"send(*args,**nargs):Nil-instance-method","html_id":"send(*args,**nargs):Nil-instance-method","name":"send","doc":"See `MiniRedis#send`.","summary":"<p>See <code><a href=\"../MiniRedis.html#send%28command%3AString%29%3ANil-instance-method\">MiniRedis#send</a></code>.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **nargs) : Nil","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/transaction.cr#L19","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/transaction.cr#L19","def":{"name":"send","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"nargs","doc":null,"default_value":"","external_name":"nargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@redis.send(*args, **nargs)\n@queued = @queued + 1\n"}}],"macros":[],"types":[]},{"html_id":"github.com/vladfaust/mini_redis/MiniRedis/Value","path":"MiniRedis/Value.html","kind":"struct","full_name":"MiniRedis::Value","name":"Value","abstract":false,"superclass":{"html_id":"github.com/vladfaust/mini_redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/vladfaust/mini_redis/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/vladfaust/mini_redis/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/vladfaust/mini_redis/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"mini_redis/value.cr","line_number":17,"url":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/value.cr"}],"repository_name":"github.com/vladfaust/mini_redis","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vladfaust/mini_redis/MiniRedis","kind":"class","full_name":"MiniRedis","name":"MiniRedis"},"doc":"A Redis value. It's `#raw` value has a type according to [Redis Protocol Specification](https://redis.io/topics/protocol):\n\n```\n# Redis type    | First byte | Crystal type |\n# ------------- | ---------- | ------------ |\n# Simple String | `+`        | `String`     |\n# Integer       | `:`        | `Int64`      |\n# Bulk String   | `$`        | `Bytes`      |\n# Array         | `*`        | `Array`      |\n```\n\n```\nresponse = String.new(redis.command(\"GET foo\").raw.as(Bytes))\npp response # => \"bar\"\n```","summary":"<p>A Redis value.</p>","class_methods":[],"constructors":[{"id":"new(raw:Int64|String|Bytes|Nil|Array(Value))-class-method","html_id":"new(raw:Int64|String|Bytes|Nil|Array(Value))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int64 | String | Bytes | Nil | Array(Value)"}],"args_string":"(raw : Int64 | String | Bytes | Nil | Array(Value))","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/value.cr#L20","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/value.cr#L20","def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int64 | String | Bytes | Nil | Array(Value)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"raw:Array(MiniRedis::Value)|Int64|Slice(UInt8)|String|Nil-instance-method","html_id":"raw:Array(MiniRedis::Value)|Int64|Slice(UInt8)|String|Nil-instance-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(MiniRedis::Value) | Int64 | Slice(UInt8) | String | Nil","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/value.cr#L18","source_link":"https://github.com/vladfaust/mini_redis/blob/69cbe90c3e7b71b3cc5a6686aa04ce04da76dea9/src/mini_redis/value.cr#L18","def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw"}}],"macros":[],"types":[]}]}]}})